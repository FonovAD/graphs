// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth_user": {
            "post": {
                "description": "AuthUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "AuthUser",
                "parameters": [
                    {
                        "description": "AuthUser",
                        "name": "AuthUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest_models.AuthUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest_models.AuthUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/check_results": {
            "get": {
                "description": "CheckResults",
                "produces": [
                    "application/json"
                ],
                "summary": "CheckResults",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest_models.CheckResultsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/create_user": {
            "post": {
                "description": "CreateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "CreateUser",
                "parameters": [
                    {
                        "description": "CreateUser",
                        "name": "CreateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest_models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest_models.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/get_tasks_from_test": {
            "post": {
                "description": "GetTasksFromTest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetTasksFromTest",
                "parameters": [
                    {
                        "description": "GetTasksFromTest",
                        "name": "GetTasksFromTest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest_models.GetTasksFromTestsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest_models.GetTasksFromTestsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/get_tests": {
            "get": {
                "description": "GetTests",
                "produces": [
                    "application/json"
                ],
                "summary": "GetTests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest_models.GetTestsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/task_components": {
            "post": {
                "description": "Task Components",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Task",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Graph"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Component"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Result": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "grade": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "start": {
                    "type": "string"
                },
                "studentID": {
                    "type": "integer"
                },
                "testID": {
                    "type": "integer"
                }
            }
        },
        "dto.Task": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "grade": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.Test": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "model.BadRequestResponse": {
            "type": "object",
            "properties": {
                "error_msg": {
                    "type": "string"
                }
            }
        },
        "model.Component": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "integer"
                }
            }
        },
        "model.Graph": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Link"
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Node"
                    }
                }
            }
        },
        "model.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "error_msg": {
                    "type": "string"
                }
            }
        },
        "model.Link": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/definitions/model.Node"
                },
                "target": {
                    "$ref": "#/definitions/model.Node"
                }
            }
        },
        "model.Node": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "rest_models.AuthUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "rest_models.AuthUserResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "rest_models.CheckResultsResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Result"
                    }
                }
            }
        },
        "rest_models.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "rest_models.CreateUserResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "rest_models.GetTasksFromTestsRequest": {
            "type": "object",
            "properties": {
                "test_id": {
                    "type": "integer"
                }
            }
        },
        "rest_models.GetTasksFromTestsResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Task"
                    }
                }
            }
        },
        "rest_models.GetTestsResponse": {
            "type": "object",
            "properties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Test"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
