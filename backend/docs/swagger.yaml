definitions:
  dto.Result:
    properties:
      end:
        type: string
      grade:
        type: integer
      id:
        type: integer
      maxGrade:
        type: integer
      start:
        type: string
      studentID:
        type: integer
      testID:
        type: integer
    type: object
  dto.Task:
    properties:
      answer:
        type: string
      data:
        type: string
      description:
        type: string
      id:
        type: integer
      maxGrade:
        type: integer
      name:
        type: string
      testID:
        type: integer
    type: object
  dto.Test:
    properties:
      description:
        type: string
      end:
        type: string
      id:
        type: integer
      name:
        type: string
      start:
        type: string
    type: object
  models.Answer:
    properties:
      answer:
        type: string
      taskID:
        type: integer
    type: object
  models.AuthUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.AuthUserResponse:
    properties:
      token:
        type: string
    type: object
  models.BadRequestResponse:
    properties:
      error_msg:
        type: string
    type: object
  models.CheckResultsRequest:
    properties:
      token:
        type: string
    type: object
  models.CheckResultsResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/dto.Result'
        type: array
    type: object
  models.CreateUserRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    type: object
  models.CreateUserResponse:
    properties:
      token:
        type: string
    type: object
  models.GetTasksFromTestsRequest:
    properties:
      test_id:
        type: integer
    type: object
  models.GetTasksFromTestsResponse:
    properties:
      tasks:
        items:
          $ref: '#/definitions/dto.Task'
        type: array
    type: object
  models.GetTestsResponse:
    properties:
      tests:
        items:
          $ref: '#/definitions/dto.Test'
        type: array
    type: object
  models.InsertTaskRequest:
    properties:
      task:
        $ref: '#/definitions/dto.Task'
    type: object
  models.InsertTaskResponse:
    properties:
      task_id:
        type: integer
    type: object
  models.InsertTestRequest:
    properties:
      test:
        $ref: '#/definitions/dto.Test'
    type: object
  models.InsertTestResponse:
    properties:
      test_id:
        type: integer
    type: object
  models.InternalServerErrorResponse:
    properties:
      error_msg:
        type: string
    type: object
  models.SendAnswersRequest:
    properties:
      answers:
        items:
          $ref: '#/definitions/models.Answer'
        type: array
      testID:
        type: integer
      token:
        type: string
    type: object
  models.SendAnswersResponse:
    properties:
      result:
        $ref: '#/definitions/dto.Result'
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /auth_user:
    post:
      consumes:
      - application/json
      description: AuthUser
      parameters:
      - description: AuthUser
        in: body
        name: AuthUser
        required: true
        schema:
          $ref: '#/definitions/models.AuthUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerErrorResponse'
      summary: AuthUser
  /check_results:
    post:
      description: CheckResults
      parameters:
      - description: CheckResultsRequest
        in: body
        name: CheckResultsRequest
        required: true
        schema:
          $ref: '#/definitions/models.CheckResultsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckResultsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerErrorResponse'
      summary: CheckResults
  /create_user:
    post:
      consumes:
      - application/json
      description: CreateUser
      parameters:
      - description: CreateUser
        in: body
        name: CreateUser
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerErrorResponse'
      summary: CreateUser
  /get_tasks_from_test:
    post:
      consumes:
      - application/json
      description: GetTasksFromTest
      parameters:
      - description: GetTasksFromTest
        in: body
        name: GetTasksFromTest
        required: true
        schema:
          $ref: '#/definitions/models.GetTasksFromTestsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetTasksFromTestsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerErrorResponse'
      summary: GetTasksFromTest
  /get_tests:
    get:
      description: GetTests
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetTestsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerErrorResponse'
      summary: GetTests
  /insert_task:
    post:
      consumes:
      - application/json
      description: InsertTask
      parameters:
      - description: InsertTest
        in: body
        name: InsertTest
        required: true
        schema:
          $ref: '#/definitions/models.InsertTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InsertTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerErrorResponse'
      summary: InsertTask
  /insert_test:
    post:
      consumes:
      - application/json
      description: InsertTest
      parameters:
      - description: InsertTest
        in: body
        name: InsertTest
        required: true
        schema:
          $ref: '#/definitions/models.InsertTestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InsertTestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerErrorResponse'
      summary: InsertTest
  /send_answers:
    post:
      consumes:
      - application/json
      description: SendAnswers
      parameters:
      - description: SendAnswers
        in: body
        name: SendAnswers
        required: true
        schema:
          $ref: '#/definitions/models.SendAnswersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SendAnswersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerErrorResponse'
      summary: SendAnswers
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
